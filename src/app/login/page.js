"use client";

import { useState } from "react";
import { useRouter } from "next/navigation";
import Image from "next/image";

export default function LoginPage() {
  const [loginMethod, setLoginMethod] = useState("email"); // "email" –∏–ª–∏ "phone"
  const [email, setEmail] = useState("");
  const [phone, setPhone] = useState("");
  const [smsCode, setSmsCode] = useState("");
  const [password, setPassword] = useState("");
  const [showPassword, setShowPassword] = useState(false);
  const [isCodeSent, setIsCodeSent] = useState(false);
  const [error, setError] = useState("");
  const router = useRouter();

  // –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–ø—Ä–æ—Å—Ç–æ–π –ø—Ä–∏–º–µ—Ä)
  const validatePhone = (phone) => {
    const phoneRegex = /^\+?[1-9]\d{1,14}$/;
    return phoneRegex.test(phone);
  };

  // –û—Ç–ø—Ä–∞–≤–∫–∞ SMS-–∫–æ–¥–∞ (–∑–∞–≥–ª—É—à–∫–∞)
  const handleSendCode = async () => {
    if (!validatePhone(phone)) {
      setError("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞");
      return;
    }

    setError("");
    try {
      console.log("–û—Ç–ø—Ä–∞–≤–∫–∞ SMS-–∫–æ–¥–∞ –Ω–∞ –Ω–æ–º–µ—Ä:", phone);
      setIsCodeSent(true);
    } catch (err) {
      setError("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ SMS-–∫–æ–¥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
    }
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥–∞
  const handleSubmit = async (e) => {
    e.preventDefault();
    setError("");

    if (loginMethod === "email") {
      if (!email || !password) {
        setError("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è");
        return;
      }

      try {
        console.log("–í—Ö–æ–¥ —á–µ—Ä–µ–∑ email:", { email, password });
        router.push("/profile");
      } catch (err) {
        setError("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
      }
    } else {
      if (!phone || !smsCode) {
        setError("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ SMS-–∫–æ–¥");
        return;
      }

      try {
        console.log("–í—Ö–æ–¥ —á–µ—Ä–µ–∑ —Ç–µ–ª–µ—Ñ–æ–Ω:", { phone, smsCode });
        router.push("/profile");
      } catch (err) {
        setError("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ SMS-–∫–æ–¥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
      }
    }
  };

  return (
    // –í–Ω–µ—à–Ω–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö –Ω–µ –ø—Ä–∏–º–µ–Ω—è–µ–º flex-—Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ,
    // —á—Ç–æ–±—ã inner-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å h-screen –∑–∞–Ω–∏–º–∞–ª –≤–µ—Å—å —ç–∫—Ä–∞–Ω, –∞ –Ω–∞ sm –∏ –≤—ã—à–µ ‚Äî —Ü–µ–Ω—Ç—Ä–∏—Ä—É–µ–º.
    <div className="min-h-screen bg-[#414141] sm:flex sm:items-center sm:justify-center">
      {/* Inner-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö –∑–∞–Ω–∏–º–∞–µ—Ç –≤–µ—Å—å —ç–∫—Ä–∞–Ω, –Ω–∞ –±–æ–ª—å—à–∏—Ö ‚Äî –∞–≤—Ç–æ */}
      <div className="bg-white w-full h-screen sm:h-auto sm:max-w-md sm:rounded-lg sm:shadow-lg p-6">
        {/* –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ */}
        <button className="w-full mb-4 p-2 border border-gray-300 flex items-center justify-center">
          <Image src="/facebook-icon.svg" alt="Facebook" width={20} height={20} className="mr-2" />
          –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —á–µ—Ä–µ–∑ Facebook
        </button>
        <button className="w-full mb-4 p-2 border border-gray-300 flex items-center justify-center">
          <Image src="/apple-icon.svg" alt="Apple" width={20} height={20} className="mr-2" />
          –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —á–µ—Ä–µ–∑ Apple
        </button>
        <button className="w-full mb-4 p-2 border border-gray-300 flex items-center justify-center">
          <Image src="/google-icon.svg" alt="Google" width={20} height={20} className="mr-2" />
          –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —á–µ—Ä–µ–∑ Google
        </button>

        {/* –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å */}
        <div className="flex items-center my-4">
          <hr className="flex-1 border-gray-300" />
          <span className="px-2 text-gray-500">–∏–ª–∏</span>
          <hr className="flex-1 border-gray-300" />
        </div>

        {/* –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –º–µ—Ç–æ–¥–∞ –≤—Ö–æ–¥–∞ */}
        <div className="flex justify-center mb-4">
          <button
            onClick={() => setLoginMethod("email")}
            className={`px-4 py-2 ${loginMethod === "email" ? "bg-gray-200" : "bg-transparent"} rounded-l-lg`}
          >
            Email
          </button>
          <button
            onClick={() => setLoginMethod("phone")}
            className={`px-4 py-2 ${loginMethod === "phone" ? "bg-gray-200" : "bg-transparent"} rounded-r-lg`}
          >
            –¢–µ–ª–µ—Ñ–æ–Ω
          </button>
        </div>

        {/* –§–æ—Ä–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ */}
        <form onSubmit={handleSubmit}>
          {loginMethod === "email" ? (
            <>
              <div className="mb-4">
                <label className="block text-sm font-medium text-gray-700">–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞</label>
                <input
                  type="email"
                  value={email}
                  onChange={(e) => setEmail(e.target.value)}
                  placeholder="–í–≤–µ–¥–∏—Ç–µ email"
                  className="w-full p-2 border border-gray-300 rounded mt-1"
                />
              </div>

              <div className="mb-4 relative">
                <label className="block text-sm font-medium text-gray-700">–ü–∞—Ä–æ–ª—å</label>
                <input
                  type={showPassword ? "text" : "password"}
                  value={password}
                  onChange={(e) => setPassword(e.target.value)}
                  placeholder="–ü–∞—Ä–æ–ª—å"
                  className="w-full p-2 border border-gray-300 rounded mt-1"
                />
                <button
                  type="button"
                  onClick={() => setShowPassword(!showPassword)}
                  className="absolute right-2 top-1/2 transform -translate-y-1/2 text-gray-500"
                >
                  {showPassword ? "üëÅÔ∏è" : "üëÅÔ∏è‚Äçüó®Ô∏è"}
                </button>
              </div>
            </>
          ) : (
            <>
              <div className="mb-4">
                <label className="block text-sm font-medium text-gray-700">–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</label>
                <input
                  type="tel"
                  value={phone}
                  onChange={(e) => setPhone(e.target.value)}
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
                  className="w-full p-2 border border-gray-300 rounded mt-1"
                />
              </div>

              {isCodeSent && (
                <div className="mb-4">
                  <label className="block text-sm font-medium text-gray-700">SMS-–∫–æ–¥</label>
                  <input
                    type="text"
                    value={smsCode}
                    onChange={(e) => setSmsCode(e.target.value)}
                    placeholder="–í–≤–µ–¥–∏—Ç–µ SMS-–∫–æ–¥"
                    className="w-full p-2 border border-gray-300 rounded mt-1"
                  />
                </div>
              )}

              {!isCodeSent && (
                <button
                  type="button"
                  onClick={handleSendCode}
                  className="w-full mb-4 p-2 bg-blue-500 text-white rounded hover:bg-blue-600"
                >
                  –û—Ç–ø—Ä–∞–≤–∏—Ç—å SMS-–∫–æ–¥
                </button>
              )}
            </>
          )}

          {error && <div className="mb-4 text-sm text-red-500">{error}</div>}

          <div className="mb-4 text-sm text-gray-500">–ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å?</div>

          <button
            type="submit"
            className="w-full bg-gray-800 text-white p-2 rounded hover:bg-gray-700"
          >
            –í–æ–π—Ç–∏
          </button>
        </form>
      </div>
    </div>
  );
}
